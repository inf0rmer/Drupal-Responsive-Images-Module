<?php
if (!function_exists('d')) {
	function d($var) {
		print '<code>';
		print_r($var);
		print '</code>';
		
		return $var;
	}
}   

/**
 * Implements hook_filter_info().
 *
 */
function responsiveimages_filter_info() {
	$filters['responsiveimages'] = array(
		'title' => t('Responsive Images Filter'),
		'description' => t('Turns normal images into "responsive" images'),
		'process callback'  => '_responsiveimages_filter_process',
		'default settings' => array(
			'image_path' => 'files/styles',
			'sizes' => array('480', '768', '992', '1382'),
		),
		'settings callback' => '_responsiveimages_filter_settings',
	);
	return $filters;
} 

/**
 * Settings callback 
 *
 */
function _responsiveimages_filter_settings($form, $form_state, $filter, $format, $defaults) {
	$settings['image_path'] = array(
		'#type' => 'textfield',
		'#title' => t('Path to your images directory'),
		'#default_value' => isset($filter->settings['image_path']) ? $filter->settings['image_path'] : $defaults['image_path'],
		'#description' => t('The path to your image folder. Relative to ' . file_default_scheme() . '/')
	);
	$settings['sizes'] = array(
    	'#type' => 'textfield',
	    '#title' => t('Image sizes to consider'),
	    '#default_value' => isset($filter->settings['sizes']) ? $filter->settings['sizes'] : $defaults['sizes'],
	    '#description' => t('Separate size values using a space, ie. "480 768"')
	);
	return $settings;
}

function responsiveimages_filter_settings_validate($form_id, $form_values) {
	d($form_values);
}

/**
 * Implements hook_filter_process().
 *
 */
function _responsiveimages_filter_process($html, $filter, $format) {	
	$tokens = $filter->settings['sizes'];
	$baseURL = file_default_scheme() . '/' .$filter->settings['image_path'];
	
	preg_match_all('#<img(.+)(src="(' . $baseURL . '([a-z0-9\-]+)/[^"]+)")([^>]*)>#i', $html, $matches);
	
	$len = count($matches[0]);
	
	for ($i = 0; $i < $len; $i++) {
	    $src = array($i); 
	
	    foreach ($tokens as $key) {
	        $url = str_replace($matches[4][$i], $key, $matches[3][$i]);
	        $src[] = 'data-src-' . $key . '="' . $url .'"';
	    }
	
	    reset($tokens);
	
	    $replacement = '<noscript>' . $matches[0][$i] . '</noscript><img' .$matches[1][$i] . implode(' ', $src) . $matches[5][$i] . '>';
	    $html = str_replace($matches[0][$i], $replacement, $html);
	}
	
	return $html;
}
?>
